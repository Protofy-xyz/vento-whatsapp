{
    "name": "chatGPT",
    "icon": "openai",
    "layouts": {
        "lg": [
            {
                "w": 6,
                "h": 6,
                "x": 0,
                "y": 0,
                "i": "action_1750256774576",
                "moved": false,
                "static": false,
                "isResizable": true
            },
            {
                "w": 13,
                "h": 14,
                "x": 0,
                "y": 6,
                "i": "value_1750256790295",
                "moved": false,
                "static": false,
                "isResizable": true
            },
            {
                "w": 7,
                "h": 6,
                "x": 6,
                "y": 0,
                "i": "value_1750261498829",
                "moved": false,
                "static": false,
                "isResizable": true
            },
            {
                "w": 11,
                "h": 20,
                "x": 13,
                "y": 0,
                "i": "value_1752225293068",
                "moved": false,
                "static": false,
                "isResizable": true
            }
        ],
        "md": [
            {
                "w": 12,
                "h": 6,
                "x": 0,
                "y": 10,
                "i": "action_1750256774576",
                "moved": false,
                "static": false,
                "isResizable": true
            },
            {
                "w": 24,
                "h": 21,
                "x": 0,
                "y": 16,
                "i": "value_1750256790295",
                "moved": false,
                "static": false,
                "isResizable": true
            },
            {
                "w": 12,
                "h": 6,
                "x": 12,
                "y": 10,
                "i": "value_1750261498829",
                "moved": false,
                "static": false,
                "isResizable": true
            },
            {
                "w": 24,
                "h": 10,
                "x": 0,
                "y": 0,
                "i": "value_1752225293068",
                "moved": false,
                "static": false,
                "isResizable": true
            }
        ],
        "sm": [
            {
                "w": 2,
                "h": 5,
                "x": 0,
                "y": 5,
                "i": "action_1750256774576",
                "moved": false,
                "static": false
            },
            {
                "w": 2,
                "h": 17,
                "x": 0,
                "y": 10,
                "i": "value_1750256790295",
                "moved": false,
                "static": false
            },
            {
                "w": 2,
                "h": 5,
                "x": 0,
                "y": 0,
                "i": "value_1750261498829",
                "moved": false,
                "static": false
            },
            {
                "i": "value_1752225293068",
                "x": 0,
                "y": 0,
                "w": 2,
                "h": 14,
                "isResizable": true
            }
        ],
        "xs": [
            {
                "w": 2,
                "h": 5,
                "x": 0,
                "y": 5,
                "i": "action_1750256774576",
                "moved": false,
                "static": false
            },
            {
                "w": 2,
                "h": 17,
                "x": 0,
                "y": 10,
                "i": "value_1750256790295",
                "moved": false,
                "static": false
            },
            {
                "w": 2,
                "h": 5,
                "x": 0,
                "y": 0,
                "i": "value_1750261498829",
                "moved": false,
                "static": false
            },
            {
                "i": "value_1752225293068",
                "x": 0,
                "y": 0,
                "w": 2,
                "h": 14,
                "isResizable": true
            }
        ]
    },
    "cards": [
        {
            "key": "action_1750256774576",
            "width": 2,
            "height": 6,
            "icon": "openai",
            "html": "\n// data contains: data.icon, data.color, data.name, data.params\nreturn card({\n    content: `\n        ${cardAction({ data })}\n    `\n});\n",
            "name": "Send message",
            "color": "#74AA9C",
            "description": "send a message to chatGPT",
            "rulesCode": "execute_action(\"/api/v1/chatgpt/send/prompt\", { message: params.message});",
            "params": {
                "message": "message"
            },
            "type": "action",
            "displayResponse": false,
            "buttonLabel": "Send"
        },
        {
            "key": "value_1750256790295",
            "width": 2,
            "height": 6,
            "icon": "openai",
            "html": "//@react\r\nreturn markdown(data)",
            "name": "Message response",
            "color": "#74AA9C",
            "description": "chatGPT last chat response",
            "rulesCode": "states?.chatGPT?.conversation?.chatResponse",
            "type": "value"
        },
        {
            "key": "value_1750261498829",
            "width": 4,
            "height": 4,
            "icon": "key",
            "html": "\n//@react\nreactCard(`\n  async function validateKey(apiKey) {\n   // return true or false if the key is valid or not\n    return true;\n  }\n\n  function Widget() {\n    return (\n          <View className=\"no-drag\">\n            <KeySetter\n              nameKey={data?.configParams?.nameKey?.defaultValue}\n              validate={validateKey}\n              onAdd={(key) => {\n                // alert(\"add: \"+key)\n              }}\n              onRemove={(key) => {\n                // alert(\"remove: \"+key)\n              }}\n            />\n          </View>\n    );\n  }\n\n`, data.domId)\n\n            ",
            "name": "Key Setter",
            "description": "Displays a key setter for a specific key or in case already set displays key is set",
            "type": "value",
            "rulesCode": "",
            "params": {
                "nameKey": "The key name to set"
            },
            "configParams": {
                "nameKey": {
                    "visible": true,
                    "defaultValue": "OPENAI_API_KEY"
                }
            }
        },
        {
            "key": "value_1752225293068",
            "width": 3,
            "height": 12,
            "icon": "file-text",
            "html": "//@react\r\nreturn markdown(data)",
            "name": "Read Me",
            "description": "Render formatted markdown using ReactMarkdown",
            "type": "value",
            "rulesCode": "return `# üß† ChatGPT Interaction Board\r\n\r\nThis board lets you chat with ChatGPT using the OpenAI API.Follow these simple steps to get started:\r\n\r\n## üîë Step 1: Get Your API Key\r\n\r\n1. Go to[OpenAI's API Keys page](https://platform.openai.com/account/api-keys).\r\n2. Log in and click ** \"Create new secret key\" **.\r\n3. Copy and save your key securely ‚Äî it won't be shown again.\r\n\r\n    > ‚ö†Ô∏è ** Keep it secret! ** Your API key is private and usage - based.\r\n\r\n## üîë Step 2: Set Your API Key\r\n\r\n1. Add your key on Key Setter card and click \"+\" to add. \r\n\r\n## üí¨ Step 3: Chat with ChatGPT\r\n\r\n- Enter your message in the ** input box **.\r\n- Click the ** \"Send\" ** button to interact.\r\n- You‚Äôll receive a response from ChatGPT below.\r\n\r\nStart chatting now and build your own AI assistant! üöÄ\r\n`",
            "editorOptions": {
                "defaultTab": "value"
            }
        }
    ],
    "autopilot": false,
    "rules": []
}